Đề 1



#include <iostream>
#include <cstring>
using namespace std;

bool checkSubstring(char* s, char* s0) {
    return strstr(s, s0) ?  true : false;
}

int main() {
    char s[100], s0[100];
    cin.getline(s0, 100);
    int n, count = 0;
    cin >> n;
    cin.ignore();
    for (int i = 0; i < n; i++) {
        cin.getline(s, 100);
        if (checkSubstring(s, s0) == true) count++;
    }
    cout << count;
    return 0;
}



#include <iostream>
#include <cstring>
using namespace std;

bool checkUp(string &s, int i) {
	if ((s[i] >= 'A') && (s[i] <= 'Z')) return 1;
	return 0;
}

void generate(char a[], int i, string s, int len) {
	if (i == 0 && checkUp(s, 0) == 1) {
		cout << s << "\n";
		return;
	} else if (i == 0 && checkUp(s, 0) == 0) return;
	for (int j = 0; j < len; j++) {
		string appended = s + a[j];
		generate(a, i - 1, appended, len);
	}
	return;
}

int main() {
	char a[20];
	cin >> a;
	int len = strlen(a);
	int n;
	cin >> n;
	generate(a, n, "", len);
	return 0;
}



Đề 2



#include <iostream>
#include <cstring>
using namespace std;

bool checkSubstring(char* s, char* s0) {
    return strstr(s, s0) ?  true : false;
}

int main() {
    int n, count = 0;
    cin >> n;
    cin.ignore();
    char s[100], s0[100];
    cin.getline(s0, 100);
    for (int i = 0; i < n; i++) {
        cin.getline(s, 100);
        if (checkSubstring(s, s0) == true) count++;
    }
    cout << count;
    return 0;
}



#include <iostream>
#include <cstring>
using namespace std;

bool checkUp(string &s, int i) {
	if ((s[i] >= 'A') && (s[i] <= 'Z')) return 1;
	return 0;
}

void generate(char a[], int i, string s, int len, int n) {
	if (i == 0 && checkUp(s, n - 1) == 0) {
		cout << s << "\n";
		return;
	} else if (i == 0 && checkUp(s, n - 1) == 1) return;
	for (int j = 0; j < len; j++) {
		string appended = s + a[j];
		generate(a, i - 1, appended, len, n);
	}
	return;
}

int main() {
	char a[20];
	cin >> a;
	int len = strlen(a);
	int n;
	cin >> n;
	generate(a, n, "", len, n);
	return 0;
}






Đề 3



#include <iostream>
#include <cstring>
#include <vector>
using namespace std;
bool checkSubstring(char* s, char* s0) {
    return strstr(s, s0) ?  true : false;
}
int main() {
    int n, count = 0;
    cin >> n;
    cin.ignore();
    char a[n][100];
    char s0[100];
    
    for (int i = 0; i < n; i++) {
        cin.getline(a[i], 100);
    }
    cin.getline(s0, 100);
    for (int i = 0; i < n; i++) {
        if (checkSubstring(a[i], s0) == true) count++;
    }
    cout << count;
    return 0;
}




#include <iostream>
#include <cstring>
using namespace std;

bool checkUp(string &s, int i) {
	if ((s[i] >= 'A') && (s[i] <= 'Z')) return 1;
	return 0;
}

void generate(char a[], int i, string s, int len, int n) {
	if (i == 0 && checkUp(s, n - 1) == 1) {
		cout << s << "\n";
		return;
	} else if (i == 0 && checkUp(s, n - 1) == 0) return;
	for (int j = 0; j < len; j++) {
		string appended = s + a[j];
		generate(a, i - 1, appended, len, n);
	}
	return;
}

int main() {
	char a[20];
	cin >> a;
	int len = strlen(a);
	int n;
	cin >> n;
	generate(a, n, "", len, n);
	return 0;
}