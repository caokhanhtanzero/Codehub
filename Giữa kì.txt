//Đề ca 1


//Bài 1:

#include <iostream>
#include <cmath>
using namespace std;

long int sumSquares(int a, int b) {
    long int sum = 0;
    int x = 1;
    while (x*x <= a) x++;
    while (x*x < b){
        sum += x*x;
        x++;
    }
    return sum;
}

int main() {
    int a, b;
    cin >> a >> b;
    cout << sumSquares(a, b);
    return 0;
}

//Bài 2:

#include <bits/stdc++.h>
using namespace std;

string takeDomain(string s) {
    string domain; 
    int pointlatin = -1;
    for (int i = 0 ; i < s.length() ; i ++) {
        if (s[i] == '@') {
            pointlatin = i;
        }
    }
    
    for (int j = pointlatin + 1; j < s.length() - 1; j ++) {
        domain += s[j];
    }
    return domain;
}

int main() {
    int n, countMin = INT_MAX;
    cin >> n;
    cin.ignore();
    string name[n];
    for (int i = 0 ;i < n ;i ++){
        getline(cin, name[i]);
    }
    
    for (int i = 0 ;i < n ;i ++) {
        int count = 0;
        for (int j = 0 ; j < n ;j ++) {
            if (takeDomain(name[i]) == takeDomain(name[j])) {
                count++;
            }
        }
        if (count < countMin) {
            countMin = count;
        }
    }
    cout << countMin;
	return 0;
}

//Bài 3:

void insertValue(int a[], int &n, int value) {
    for (int i = 0; i < n; i++){
        if (a[i] > value){
            for (int j = n; j > i; j--){
                a[j] = a[j - 1];
            }
            a[i] = value;
            break;
        } else {
            a[n] = value;
        }
    }
    n++;
}





//Đề ca 2

//Bài 1:

#include <iostream>
using namespace std;

long int totalDigitsOfNumber(long int n) {
    long int total = 0;
    do {
        total = total + n % 10;
        n = n / 10;
    } while (n > 0);
    return total;
}

int main() {
    long int a, b;
    cin >> a >> b;
    cout << totalDigitsOfNumber(a*b);
    return 0;
}

//Bài 2:

#include <bits/stdc++.h>
using namespace std;

string takeDomain(string s) {
    string domain; 
    int pointlatin = -1;
    for (int i = 0 ; i < s.length() ; i ++) {
        if (s[i] == '@') {
            pointlatin = i;
        }
    }
    
    for (int j = pointlatin + 1; j < s.length() - 1; j ++) {
        domain += s[j];
    }
    return domain;
}

int main() {
    int n, count2 = 0;
    cin >> n;
    cin.ignore();
    string name[n];
    for (int i = 0; i < n; i ++){
        getline(cin, name[i]);
    }
    
    vector<string> str;
    
    for (int i = 0; i < n; i ++) {
        str.push_back(takeDomain(name[i]));
    }
    
    map<string, int> cnt;
    
    for (int i = 0; i < str.size(); i++){
        cnt[str[i]]++;
    }
    for (auto it : cnt){
        if (it.second > 2) count2++;
    }
    cout << count2;
	return 0;
}

//Bài 3:

void removeFirstNegative(int a[], int &n) {
    for (int i = 0; i < n; i++) {
        if (a[i] < 0) {
            for (int j = i; j < n - 1; j++) {
                a[j] = a[j + 1];
            }
            n--;
            break;
        }
    }
}